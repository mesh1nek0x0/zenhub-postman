{
	"info": {
		"_postman_id": "2797ab6c-c0c3-42e2-bd91-7c28b86aad0f",
		"name": "zenhub",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "issues",
			"item": [
				{
					"name": "Get Issue Data",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authentication-Token",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/{{REPO_ID}}/issues/:issue_number",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								"{{REPO_ID}}",
								"issues",
								":issue_number"
							],
							"variable": [
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						},
						"description": "Get the data for a specific issue."
					},
					"response": []
				},
				{
					"name": "Set Issue Estimate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"estimate\": 8 }"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/{{REPO_ID}}/issues/:issue_number/estimate",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								"{{REPO_ID}}",
								"issues",
								":issue_number",
								"estimate"
							],
							"variable": [
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Issue Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authentication-Token",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/{{REPO_ID}}/issues/:issue_number/events",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								"{{REPO_ID}}",
								"issues",
								":issue_number",
								"events"
							],
							"variable": [
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						},
						"description": "Get the events for an issue."
					},
					"response": []
				},
				{
					"name": "Move an Issue Between Pipelines",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authentication-Token",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pipeline_id\": {{PIPELINE_REVIEW}},\n  \"position\": \"top\"\n}"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p2/workspaces/:workspace_id/repositories/:repo_id/issues/:issue_number/moves",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p2",
								"workspaces",
								":workspace_id",
								"repositories",
								":repo_id",
								"issues",
								":issue_number",
								"moves"
							],
							"variable": [
								{
									"key": "workspace_id",
									"value": "{{WORKSPACE_ID}}"
								},
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						},
						"description": "Moves an issue between Pipelines in a Workspace"
					},
					"response": []
				},
				{
					"name": "Move an Issue Between Pipelines in the oldest Workspace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pipeline_id\": {{PIPELINE_ICEBOX}},\n  \"position\": \"top\"\n}"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/issues/:issue_number/moves",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"issues",
								":issue_number",
								"moves"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						},
						"description": "Moves an issue between Pipelines for a repository in your oldest Workspace"
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get ZenHub Workspaces for a repository",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authentication-Token",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p2/repositories/{{REPO_ID}}/workspaces",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p2",
								"repositories",
								"{{REPO_ID}}",
								"workspaces"
							]
						},
						"description": "Gets all Workspaces containing repo_id"
					},
					"response": []
				},
				{
					"name": "Get the oldest ZenHub board for a repository",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/board",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"board"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a ZenHub Board for a repository",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p2/workspaces/:workspace_id/repositories/:repo_id/board",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p2",
								"workspaces",
								":workspace_id",
								"repositories",
								":repo_id",
								"board"
							],
							"variable": [
								{
									"key": "workspace_id",
									"value": "{{WORKSPACE_ID}}"
								},
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								}
							]
						},
						"description": "Get ZenHub Board data for a repository (repo_id) within the Workspace (workspace_id)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Epics",
			"item": [
				{
					"name": "Get Epics for a repository",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/epics",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"epics"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								}
							]
						},
						"description": "Get all Epics for a repository"
					},
					"response": []
				},
				{
					"name": "Get Epic Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/epics/:epic_id",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"epics",
								":epic_id"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "epic_id",
									"value": "1"
								}
							]
						},
						"description": "Get the data for an Epic issue."
					},
					"response": []
				},
				{
					"name": "Add or remove issues to Epic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"remove_issues\": [{ \"repo_id\": {{REPO_ID}}, \"issue_number\": 3 }],\n  \"add_issues\": [\n    { \"repo_id\": {{REPO_ID}}, \"issue_number\": 5 },\n    { \"repo_id\": {{REPO_ID}}, \"issue_number\": 6 }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/epics/:issue_number/update_issues",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"epics",
								":issue_number",
								"update_issues"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "issue_number",
									"value": "1"
								}
							]
						},
						"description": "Bulk add or remove issues to an Epic. The result returns which issue was added or removed from the Epic."
					},
					"response": []
				},
				{
					"name": "Convert an Epic to an Issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/epics/:issue_number/convert_to_issue",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"epics",
								":issue_number",
								"convert_to_issue"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "issue_number",
									"value": "5"
								}
							]
						},
						"description": "Converts an Epic back to a regular issue."
					},
					"response": []
				},
				{
					"name": "Convert Issue to Epic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"issues\": [\n    { \"repo_id\": {{REPO_ID}}, \"issue_number\": 6 }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/issues/:issue_number/convert_to_epic",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"issues",
								":issue_number",
								"convert_to_epic"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "issue_number",
									"value": "5"
								}
							]
						},
						"description": "Converts an issue to an Epic, along with any issues that should be part of it."
					},
					"response": []
				}
			]
		},
		{
			"name": "Milestones",
			"item": [
				{
					"name": "Set milestone start date",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"start_date\": \"2019-08-04T01:38:56.842Z\" }"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/milestones/:milestone_number/start_date",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"milestones",
								":milestone_number",
								"start_date"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "milestone_number",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestone start date",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/milestones/:milestone_number/start_date",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"milestones",
								":milestone_number",
								"start_date"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								},
								{
									"key": "milestone_number",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "note\nonly set start date and get start date.\nmay be cannot create milestone (enable to create in GitHub)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8534d2b6-a44e-47fe-9d07-98949391507b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "349a2f7a-349c-4004-a1da-35ab48b7b1e1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dependencies",
			"item": [
				{
					"name": "Get Dependencies for a Repository",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/dependencies",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"dependencies"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Dependency",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/repositories/:repo_id/dependencies",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"repositories",
								":repo_id",
								"dependencies"
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "{{REPO_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a Dependency",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authentication-Token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"blocking\": {\n    \"repo_id\": {{REPO_ID}},\n    \"issue_number\": 6\n  },\n  \"blocked\": {\n    \"repo_id\": {{REPO_ID}},\n    \"issue_number\": 5\n  }\n}"
						},
						"url": {
							"raw": "https://{{API_HOST}}/p1/dependencies",
							"protocol": "https",
							"host": [
								"{{API_HOST}}"
							],
							"path": [
								"p1",
								"dependencies"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}